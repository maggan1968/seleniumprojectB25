- Today's schedule:
	- Review
	- Task#1
	- XPath review + additional functionality
	- Webtables

	- Utility methods
	- Bunch of other tasks

------------------------------------------------------------------------------------

- How do you handle dropdowns?

- First I will inspect and see what type of dropdown it is.
- If it is HTML dropdown (non-select), I will just locate with any locator and click.
- If it is <select> dropdown, I will use Select class coming from Selenium library.

- How do we get all of the options from a Select dropdown?
- .getOptions method

- What is the return type?
- List<WebElement>

- How do we get currently selected option?
- .getFirstSelectedOption();
- this method can be used to get the default value
- also can be used to get the value after selecting something.

- What is the return type?
- Single WebElement

- How do we select options from a Select dropdown?
- We can use 3 methods provided by Selenium library
	- selectByIndex
	- selectByValue
	- selectByVisibleText

- Syntax of how do we handle Select dropdown?

#1- We create object of Select class
#2- We need to locate the dropdown <select> tag itself and pass it into the Select constructor.

	Select dropdownName = new Select(driver.findElement(By.LOCATOR));


#3- We can use the object for handling the dropdowns.

	dropdownName.selectByVisibleText();

------------------------------------------------------------------------------------

- What is an alert?
- Some pop-ups happening on the page.
- Developers use alerts to get users attention to deliver some content.

- How many types of alerts do we have?
- We have 2 types of Alerts.

#1- HTML Alert (Non-JS Alert)
	- This will be present inside of the <html> page as some web element.
	- There is nothing special about this alert, we just locate and click

#2- Javascript Alert
	- We have 3 types of alerts

	#1- Information/Warning Alert:
		- User can ONLY accept this alert.

	#2- Confirmation Alert:
		- User can accept and decline.

	#3- Prompt Alert:
		- User can accept, decline, and also sendKeys.


- How do we handle Alerts using Selenium?
- I will check the type of the alert.
- After making sure it is a JS alert, I will use Alert from Selenium library to switch drivers focus to the Alert itself.

	Alert alert = driver.switchTo().alert();

	alert.accept();
	alert.dismiss();
	alert.sendKeys("string");


------------------------------------------------------------------------------------

- What is an iframe?
- An iframe is HTML within another HTML page.
- Most of the time it is used to create independent sections in a page for advertisements, maps, video content or anything independent.

- How do we handle iframes?
- Selenium WebDriver can focus on one thing at a time.
- Therefore we must switch its focus from the default <html> to iframe <html> before being able to do any action inside of it.

- What happens if we do not switch to inner frame?
- If we try to locate any web element before switching, we will get NoSuchElementException

- How many ways we have to switch to inner iframe?
	#1- by index:
		- starts from 0
		- we count

	syntax: driver.switchTo().frame(index);

	#2- by id-name value
		- if there is id or name attribute we can just pass their values as a string

	syntax: driver.switchTo().frame("id-name value");

	#3- by locating it as a web element
		- we locate the iframe tag itself as a web element and pass it into the method.

	syntax: driver.switchTo().frame(WebElement);
	syntax: driver.switchTo().frame(driver.findElement(By.locator));

- How do we go switch driver's focus to default iframe?
	driver.switchTo().parentFrame();
	driver.switchTo().defaultContent();


1	<html>

2		<html>
3			<html> --> driver.switchTo().parentFrame(); --> will focus to 2
			</html> --> driver.switchTo().defaultContent(); --> will focus to #1
		</html>

4		<html>  --> driver.switchTo().parentFrame(); --> will focus to #1
		</html> --> driver.switchTo().defaultContent(); --> will focus to #1


	<html>

- The only time parentFrame() method and defaultContent() method will make any difference in use is if we have iframe inside of another iframe.
- Otherwise if we have 1 layer of iframe they will both switch back to default html

------------------------------------------------------------------------------------
- WINDOWS

- Is there any difference for selenium if it is a tab or window?
- No. Regardless if it is a window or a tab it is all a WINDOW for Selenium.

- How does Selenium knows which window is different from which?
- WindowHandles

- What is a window handle?
- A randomly generated unique alphanumeric ID for each window.

- Every window has their own window handle randomly generated by selenium.
- We don't have to do anything special for it.

- How do we get the current window's handle?
- .getWindowHandle();

- What is the return type?
- String
- It will capture and return the current windows handle as a String.

- How do we get all of the currently opened windows' handles?
- .getWindowHandles();

- What is the return type?
- Set <String>

- Selenium will only return the window handles from the currently executed session.

- Syntax: driver.switchTo().window(windowHandle);



------------------------------------------------------------------------------------